package com.dsa;

import java.util.Arrays;

public class LeftRotateArray {

	public static int[] leftRotateOnePosition(int[] arr) {
		int letf = arr[0];

		for (int i = 0; i < arr.length - 1; i++) {
			arr[i] = arr[i + 1];
		}

		arr[arr.length - 1] = letf;

		return arr;
	}

	public static int[] leftRotateArrayByGivenPosition(int arr[], int k) {
		int newArray[] = new int[k];

		for (int i = 0; i < k; i++) {
			newArray[i] = arr[i];
		}
		for (int i = k; i < arr.length - 1; i++) {
			arr[i] = arr[i + 1];
		}
		int merge[] = new int[arr.length + newArray.length];

		int i = 0, j = 0, l = 0;

		while (i < arr.length) {
			merge[l++] = arr[i++];
		}

		while (j < newArray.length) {
			merge[l++] = newArray[j++];
		}

		return merge;
	}

	public static void main(String[] args) {
		int arr[] = { 1, 2, 3, 4, 5 };
		int[] leftRotateOnePosition = leftRotateOnePosition(arr);
		System.out.println(Arrays.toString(leftRotateOnePosition));
	}

}
